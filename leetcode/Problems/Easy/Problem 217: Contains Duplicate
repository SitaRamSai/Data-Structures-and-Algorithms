//	Approach 1: Using HashSet
	
//	Create a hashset
//	Traverse the array and add all the elements into the hashset
//  If the hashset contains the element then return true else return false


      public boolean containsDuplicate(int[] nums) {
          Set<Integer> set = new HashSet<>(nums.length);
          for (int x: nums) {
              if (set.contains(x)) return true;
              set.add(x);
          }
          return false;
      }
    



// 	Approach 2: Using Sorting
	
//	First sort the given array
//	Traverse the array
//	Check the first element and element next to it.
//  If they are equal then there is a duplicate, so return true else return false

      class Solution {
          public boolean containsDuplicate(int[] nums) {

              Arrays.sort(nums);

              for (int i=0; i<nums.length-1; i++){
                  if (nums[i] == nums[i+1]) 
                      return true;
              }
              return false;

          }
      }
