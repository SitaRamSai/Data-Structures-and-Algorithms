//	Using HashMap
	
//	Create a hashmap with both Integer type
//	Traverse the array and note down the element and itâ€™s count.
//	Traverse the array again and check for the element occurrence to be 1.
//	If we found it then return the index of it. 


  class Solution {
      public int singleNumber(int[] nums) {

      Map<Integer, Integer> m = new HashMap<>();

      for(int i: nums){
          m.put(i, m.getOrDefault(i,0) + 1);
      }

      for(int i: nums){
          if(m.get(i) == 1)
              return i;
      }
          return 0;
      }
  }
  
  
// Time complexity = O(n) where n are the number of elements it takes to traverse the loop.
// Space complexity = As we are using HashMap it will be O(n) where n are the number of elements in hash table. 
